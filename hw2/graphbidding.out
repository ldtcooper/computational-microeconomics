Problem:    graphbidding
Rows:       33
Columns:    42 (42 integer, 42 binary)
Non-zeros:  110
Status:     INTEGER OPTIMAL
Objective:  efficiency = 6 (MAXimum)

   No.   Row name        Activity     Lower bound   Upper bound
------ ------------    ------------- ------------- -------------
     1 efficiency                  6                             
     2 assign_once[i_1]
                                   1                           1 
     3 assign_once[i_2]
                                   1                           1 
     4 assign_once[i_3]
                                   1                           1 
     5 assign_once[i_4]
                                   1                           1 
     6 assign_once[i_5]
                                   1                           1 
     7 positive_constraint[b_1,p_1]
                                   4                           4 
     8 positive_constraint[b_1,p_2]
                                   0                           4 
     9 positive_constraint[b_1,p_3]
                                   0                           4 
    10 positive_constraint[b_1,p_4]
                                   0                           4 
    11 positive_constraint[b_1,p_5]
                                   4                           4 
    12 positive_constraint[b_1,p_6]
                                   3                           3 
    13 positive_constraint[b_1,p_7]
                                   0                           3 
    14 positive_constraint[b_2,p_1]
                                   0                           4 
    15 positive_constraint[b_2,p_2]
                                   0                           4 
    16 positive_constraint[b_2,p_3]
                                   4                           4 
    17 positive_constraint[b_2,p_4]
                                   4                           4 
    18 positive_constraint[b_2,p_5]
                                   0                           4 
    19 positive_constraint[b_2,p_6]
                                   0                           3 
    20 positive_constraint[b_2,p_7]
                                  -1                           3 
    21 positive_constraint[b_3,p_1]
                                   0                           4 
    22 positive_constraint[b_3,p_2]
                                   4                           4 
    23 positive_constraint[b_3,p_3]
                                   0                           4 
    24 positive_constraint[b_3,p_4]
                                   0                           4 
    25 positive_constraint[b_3,p_5]
                                   0                           4 
    26 positive_constraint[b_3,p_6]
                                   0                           3 
    27 positive_constraint[b_3,p_7]
                                  -1                           3 
    28 negative_constraint[b_1,n_1]
                                  -5                          -3 
    29 negative_constraint[b_1,n_2]
                                  -7                          -4 
    30 negative_constraint[b_2,n_1]
                                  -7                          -3 
    31 negative_constraint[b_2,n_2]
                                  -6                          -4 
    32 negative_constraint[b_3,n_1]
                                  -5                          -3 
    33 negative_constraint[b_3,n_2]
                                  -5                          -4 

   No. Column name       Activity     Lower bound   Upper bound
------ ------------    ------------- ------------- -------------
     1 assigned[b_1,i_1]
                    *              1             0             1 
     2 assigned[b_2,i_1]
                    *              0             0             1 
     3 assigned[b_3,i_1]
                    *              0             0             1 
     4 assigned[b_1,i_2]
                    *              0             0             1 
     5 assigned[b_2,i_2]
                    *              0             0             1 
     6 assigned[b_3,i_2]
                    *              1             0             1 
     7 assigned[b_1,i_3]
                    *              0             0             1 
     8 assigned[b_2,i_3]
                    *              1             0             1 
     9 assigned[b_3,i_3]
                    *              0             0             1 
    10 assigned[b_1,i_4]
                    *              0             0             1 
    11 assigned[b_2,i_4]
                    *              1             0             1 
    12 assigned[b_3,i_4]
                    *              0             0             1 
    13 assigned[b_1,i_5]
                    *              1             0             1 
    14 assigned[b_2,i_5]
                    *              0             0             1 
    15 assigned[b_3,i_5]
                    *              0             0             1 
    16 positive_applies[b_1,p_1]
                    *              1             0             1 
    17 positive_applies[b_1,p_2]
                    *              0             0             1 
    18 positive_applies[b_1,p_3]
                    *              0             0             1 
    19 positive_applies[b_1,p_4]
                    *              0             0             1 
    20 positive_applies[b_1,p_5]
                    *              1             0             1 
    21 positive_applies[b_1,p_6]
                    *              1             0             1 
    22 positive_applies[b_1,p_7]
                    *              0             0             1 
    23 positive_applies[b_2,p_1]
                    *              0             0             1 
    24 positive_applies[b_2,p_2]
                    *              0             0             1 
    25 positive_applies[b_2,p_3]
                    *              1             0             1 
    26 positive_applies[b_2,p_4]
                    *              1             0             1 
    27 positive_applies[b_2,p_5]
                    *              0             0             1 
    28 positive_applies[b_2,p_6]
                    *              0             0             1 
    29 positive_applies[b_2,p_7]
                    *              0             0             1 
    30 positive_applies[b_3,p_1]
                    *              0             0             1 
    31 positive_applies[b_3,p_2]
                    *              1             0             1 
    32 positive_applies[b_3,p_3]
                    *              0             0             1 
    33 positive_applies[b_3,p_4]
                    *              0             0             1 
    34 positive_applies[b_3,p_5]
                    *              0             0             1 
    35 positive_applies[b_3,p_6]
                    *              0             0             1 
    36 positive_applies[b_3,p_7]
                    *              0             0             1 
    37 negative_applies[b_1,n_1]
                    *              1             0             1 
    38 negative_applies[b_1,n_2]
                    *              1             0             1 
    39 negative_applies[b_2,n_1]
                    *              1             0             1 
    40 negative_applies[b_2,n_2]
                    *              1             0             1 
    41 negative_applies[b_3,n_1]
                    *              1             0             1 
    42 negative_applies[b_3,n_2]
                    *              1             0             1 

Integer feasibility conditions:

KKT.PE: max.abs.err = 0.00e+00 on row 0
        max.rel.err = 0.00e+00 on row 0
        High quality

KKT.PB: max.abs.err = 0.00e+00 on row 0
        max.rel.err = 0.00e+00 on row 0
        High quality

End of output
